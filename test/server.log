<<<<<<< HEAD
[1;34m [INFO] [2024-08-30 13:12:59] [0mstartSimulation on hostname: server 
[1;91m [DEBUG] [2024-08-30 13:12:59] [0mtju_handle_packet 
[1;91m [DEBUG] [2024-08-30 13:12:59] [0mserver: SYN received! 
[1;91m [DEBUG] [2024-08-30 13:12:59] [0mtju_handle_packet 
[1;91m [DEBUG] [2024-08-30 13:12:59] [0mserver: ACK received! 
[服务端] 测试双方同时断开连接的情况
[1;91m [DEBUG] [2024-08-30 13:12:59] [0mFIN sent! sock state -> FIN_WAIT_1 
[1;91m [DEBUG] [2024-08-30 13:13:01] [0mtju_handle_packet 
[1;91m [DEBUG] [2024-08-30 13:13:01] [0mFIN received! sock state -> CLOSING 
[1;91m [DEBUG] [2024-08-30 13:13:01] [0mtju_handle_packet 
[1;91m [DEBUG] [2024-08-30 13:13:01] [0mACK received! sock state -> TIME_WAIT 
[1;91m [DEBUG] [2024-08-30 13:13:01] [0msock state -> CLOSED 
STATE TRANSFORM TO CLOSED
=======
[服务端] 测试双方同时断开连接的情况
[服务端] 收到一个TCP数据包 src=5678 dst=1234 seq=1 ack=0 flags=8
[服务端] 此时服务器状态为 LISTEN, 检查SYN数据包
[服务端] 客户端发送的第一个SYN报文检验通过
[服务端] 发送SYNACK 进入SYN_RECV状态 等待客户端第三次握手的ACK
[服务端] 发送SYNACK src=1324 dst=5678 seq=646 ack=2 flags=12
[服务端] 收到一个TCP数据包 src=5678 dst=1234 seq=2 ack=647 flags=4
[服务端] 此时服务器状态为 SYN_RECV, 检查ACK数据包
[服务端] 客户端发送的ACK报文检验通过, 成功建立连接, 服务端状态转为ESTABLISHED
[服务端] 收到一个TCP数据包 src=5678 dst=1234 seq=1 ack=2 flags=2
[服务端] 此时服务器状态为 ESTABLISHED/FIN_WAIT_1, 检查FIN数据包
[服务端] 客户端发送的FIN报文检验通过
{{FIRST FIN PASSED TEST}}
[服务端] 模拟正常双方同时断开连接情况 服务端假装没有收到FIN包 先按照没有收到FIN的情况发FIN
[服务端] 然后再收到客户端的FIN, 发送ACK响应
[服务端] 发送FINACK src=1324 dst=5678 seq=647 ack=2 flags=6
[服务端] 发送ACK src=1324 dst=5678 seq=648 ack=2 flags=4
[服务端] 状态转为 CLOSING
[服务端] 收到一个TCP数据包 src=5678 dst=1234 seq=2 ack=648 flags=4
[服务端] 此时服务器状态为 LAST_ACK/CLOSING, 检查ACK数据包
[服务端] 客户端发送的ACK报文检验通过
{{FINAL ACK PASSED TEST}}
>>>>>>> cbb64151a7a1dbb5e3c2b29f1a8298deec314304
